AWSTemplateFormatVersion: 2010-09-09
Description: 'CloudFormation template for the IAM, Cognito and DynamoDB service resources.'
Parameters:
  ServiceName:
    Type: String
    Description: 'Specifies the name of the service e.g. ConnectedCar.'
    Default: ConnectedCar
  EnvironmentName:
    Type: String
    Default: Dev
    AllowedValues:
      - Dev
      - Test
      - Prod
    Description: 'Specifies the name of the environment (Dev,Test,Prod).'
  ServicesPolicyArn:
    Type: String
    Description: 'Specifies the ARN of the services policy'
Resources:
  LoggingPolicy:
    Type: 'AWS::IAM::ManagedPolicy'
    Properties:
      Description: Policy for allowing log writes
      Path: /
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - 'logs:CreateLogGroup'
              - 'logs:CreateLogStream'
              - 'logs:PutLogEvents'
            Resource: !Sub 'arn:aws:logs:${AWS::Region}:${AWS::AccountId}:*'
  LambdaExecutionRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - apigateway.amazonaws.com
                - lambda.amazonaws.com
            Action: 'sts:AssumeRole'
      Path: /
      ManagedPolicyArns:
        - !Ref LoggingPolicy
        - !Ref ServicesPolicyArn
        - 'arn:aws:iam::aws:policy/AWSXRayDaemonWriteAccess'
        - 'arn:aws:iam::aws:policy/CloudWatchLambdaInsightsExecutionRolePolicy'
      RoleName: !Sub '${ServiceName}LambdaExecutionRole${EnvironmentName}'
    DependsOn:
      - LoggingPolicy
Outputs:
  LambdaExecutionRoleArn:
    Description: 'The Lambda execution role ARN'
    Value: !GetAtt 
      - LambdaExecutionRole
      - Arn
